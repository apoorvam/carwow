var gaugeExecutionResult = {"suiteResult":{"specResults":[{"protoSpec":{"specHeading":"Specification Heading","items":[{"itemType":2,"comment":{"text":"\n"}},{"itemType":2,"comment":{"text":"This is an executable specification file. This file follows markdown syntax. Every heading in this file denotes a scenario. Every bulleted point denotes a step."}},{"itemType":2,"comment":{"text":"\n"}},{"itemType":2,"comment":{"text":"To execute this specification, use"}},{"itemType":2,"comment":{"text":"\n"}},{"itemType":2,"comment":{"text":"\tgauge specs/hello_world.spec"}},{"itemType":2,"comment":{"text":"\n"}},{"itemType":1,"step":{"actualText":"A context step which gets executed before every scenario","parsedText":"A context step which gets executed before every scenario","fragments":[{"fragmentType":1,"text":"A context step which gets executed before every scenario"}],"stepExecutionResult":{"skipped":false}}},{"itemType":2,"comment":{"text":"\n"}},{"itemType":4,"scenario":{"scenarioHeading":"First scenario","failed":false,"contexts":[{"itemType":1,"step":{"actualText":"A context step which gets executed before every scenario","parsedText":"A context step which gets executed before every scenario","fragments":[{"fragmentType":1,"text":"A context step which gets executed before every scenario"}],"stepExecutionResult":{"executionResult":{"failed":false,"executionTime":0},"skipped":false}}}],"scenarioItems":[{"itemType":2,"comment":{"text":"\n"}},{"itemType":7,"tags":{"tags":["hello world","first test"]}},{"itemType":2,"comment":{"text":"\n"}},{"itemType":1,"step":{"actualText":"Say \"hello\" to \"gauge\"","parsedText":"Say {} to {}","fragments":[{"fragmentType":1,"text":"Say "},{"fragmentType":2,"parameter":{"parameterType":1,"value":"hello","name":""}},{"fragmentType":1,"text":" to "},{"fragmentType":2,"parameter":{"parameterType":1,"value":"gauge","name":""}}],"stepExecutionResult":{"executionResult":{"failed":false,"executionTime":0},"skipped":false}}},{"itemType":2,"comment":{"text":"\n"}},{"itemType":2,"comment":{"text":"\n"}}],"tags":["hello world","first test"],"executionTime":0,"skipped":false}},{"itemType":4,"scenario":{"scenarioHeading":"Second scenario for the specification","failed":false,"contexts":[{"itemType":1,"step":{"actualText":"A context step which gets executed before every scenario","parsedText":"A context step which gets executed before every scenario","fragments":[{"fragmentType":1,"text":"A context step which gets executed before every scenario"}],"stepExecutionResult":{"executionResult":{"failed":false,"executionTime":0},"skipped":false}}}],"scenarioItems":[{"itemType":2,"comment":{"text":"\n"}},{"itemType":2,"comment":{"text":"This is the second scenario in this specification"}},{"itemType":2,"comment":{"text":"\n"}},{"itemType":1,"step":{"actualText":"Say \"hello again\" to \"gauge\"","parsedText":"Say {} to {}","fragments":[{"fragmentType":1,"text":"Say "},{"fragmentType":2,"parameter":{"parameterType":1,"value":"hello again","name":""}},{"fragmentType":1,"text":" to "},{"fragmentType":2,"parameter":{"parameterType":1,"value":"gauge","name":""}}],"stepExecutionResult":{"executionResult":{"failed":false,"executionTime":0},"skipped":false}}},{"itemType":1,"step":{"actualText":"Step that takes a table","parsedText":"Step that takes a table {}","fragments":[{"fragmentType":1,"text":"Step that takes a table "},{"fragmentType":2,"parameter":{"parameterType":5,"name":"","table":{"headers":{"cells":["Product","Description"]},"rows":[{"cells":["Gauge","Test automation with ease"]},{"cells":["Mingle","Agile project management"]},{"cells":["Snap","Hosted continuous integration"]},{"cells":["Gocd","Continuous delivery platform"]}]}}}],"stepExecutionResult":{"executionResult":{"failed":false,"executionTime":0},"skipped":false}}},{"itemType":2,"comment":{"text":"\n"}}],"executionTime":0,"skipped":false}}],"isTableDriven":false,"fileName":"/Users/coocoder/desktop/carwow/specs/hello_world.spec"},"scenarioCount":2,"scenarioFailedCount":0,"failed":false,"executionTime":0,"skipped":false,"scenarioSkippedCount":0},{"protoSpec":{"specHeading":"Technical Test Ruby developer","items":[{"itemType":2,"comment":{"text":"==============================="}},{"itemType":2,"comment":{"text":"\n"}},{"itemType":2,"comment":{"text":"Produce a Ruby 2.0 program that simulates a basic interactive bitmap editor."}},{"itemType":2,"comment":{"text":"Bitmaps are represented as an M x N matrix of pixels with each element"}},{"itemType":2,"comment":{"text":"representing a colour."}},{"itemType":2,"comment":{"text":"\n"}},{"itemType":2,"comment":{"text":"Program input"}},{"itemType":2,"comment":{"text":"\n"}},{"itemType":2,"comment":{"text":"The input consists of a string containing a sequence of commands, where"}},{"itemType":2,"comment":{"text":"a command is represented by a single capital letter at the beginning of the line."}},{"itemType":2,"comment":{"text":"Parameters of the command are separated by white spaces and they follow the command character."}},{"itemType":2,"comment":{"text":"\n"}},{"itemType":2,"comment":{"text":"Pixel co-ordinates are a pair of integers: a column number between 1 and 250, and a row number between 1 and 250. Bitmaps starts at coordinates 1,1. Colours are specified by capital letters."}},{"itemType":2,"comment":{"text":"\n"}},{"itemType":2,"comment":{"text":"Commands"}},{"itemType":2,"comment":{"text":"\n"}},{"itemType":2,"comment":{"text":"There are 7 supported commands:"}},{"itemType":2,"comment":{"text":"\n"}},{"itemType":1,"step":{"actualText":"I M N - Create a new M x N image with all pixels coloured white (O).","parsedText":"I M N - Create a new M x N image with all pixels coloured white (O).","fragments":[{"fragmentType":1,"text":"I M N - Create a new M x N image with all pixels coloured white (O)."}],"stepExecutionResult":{"skipped":true,"skippedReason":"Step implemenatation not found"}}},{"itemType":1,"step":{"actualText":"C - Clears the table, setting all pixels to white (O).","parsedText":"C - Clears the table, setting all pixels to white (O).","fragments":[{"fragmentType":1,"text":"C - Clears the table, setting all pixels to white (O)."}],"stepExecutionResult":{"skipped":true,"skippedReason":"Step implemenatation not found"}}},{"itemType":1,"step":{"actualText":"L X Y C - Colours the pixel (X,Y) with colour C.","parsedText":"L X Y C - Colours the pixel (X,Y) with colour C.","fragments":[{"fragmentType":1,"text":"L X Y C - Colours the pixel (X,Y) with colour C."}],"stepExecutionResult":{"skipped":true,"skippedReason":"Step implemenatation not found"}}},{"itemType":1,"step":{"actualText":"V X Y1 Y2 C - Draw a vertical segment of colour C in column X between rows Y1 and Y2 (inclusive).","parsedText":"V X Y1 Y2 C - Draw a vertical segment of colour C in column X between rows Y1 and Y2 (inclusive).","fragments":[{"fragmentType":1,"text":"V X Y1 Y2 C - Draw a vertical segment of colour C in column X between rows Y1 and Y2 (inclusive)."}],"stepExecutionResult":{"skipped":true,"skippedReason":"Step implemenatation not found"}}},{"itemType":1,"step":{"actualText":"H X1 X2 Y C - Draw a horizontal segment of colour C in row Y between columns X1 and X2 (inclusive).","parsedText":"H X1 X2 Y C - Draw a horizontal segment of colour C in row Y between columns X1 and X2 (inclusive).","fragments":[{"fragmentType":1,"text":"H X1 X2 Y C - Draw a horizontal segment of colour C in row Y between columns X1 and X2 (inclusive)."}],"stepExecutionResult":{"skipped":true,"skippedReason":"Step implemenatation not found"}}},{"itemType":1,"step":{"actualText":"F X Y C - Fill the region R with the colour C. R is defined as: Pixel (X,Y) belongs to R. Any other pixel which is the same colour as (X,Y) and shares a common side with any pixel in R also belongs to this region.","parsedText":"F X Y C - Fill the region R with the colour C. R is defined as: Pixel (X,Y) belongs to R. Any other pixel which is the same colour as (X,Y) and shares a common side with any pixel in R also belongs to this region.","fragments":[{"fragmentType":1,"text":"F X Y C - Fill the region R with the colour C. R is defined as: Pixel (X,Y) belongs to R. Any other pixel which is the same colour as (X,Y) and shares a common side with any pixel in R also belongs to this region."}],"stepExecutionResult":{"skipped":true,"skippedReason":"Step implemenatation not found"}}},{"itemType":1,"step":{"actualText":"S - Show the contents of the current image","parsedText":"S - Show the contents of the current image","fragments":[{"fragmentType":1,"text":"S - Show the contents of the current image"}],"stepExecutionResult":{"skipped":true,"skippedReason":"Step implemenatation not found"}}},{"itemType":1,"step":{"actualText":"X - Terminate the session","parsedText":"X - Terminate the session","fragments":[{"fragmentType":1,"text":"X - Terminate the session"}],"stepExecutionResult":{"skipped":true,"skippedReason":"Step implemenatation not found"}}},{"itemType":2,"comment":{"text":"\n"}},{"itemType":2,"comment":{"text":"Example"}},{"itemType":2,"comment":{"text":"\n"}},{"itemType":2,"comment":{"text":"In the example below, \u003e represents input"}},{"itemType":2,"comment":{"text":"\n"}},{"itemType":2,"comment":{"text":"```"}},{"itemType":2,"comment":{"text":"\u003e I 5 6"}},{"itemType":2,"comment":{"text":"\u003e L 2 3 A"}},{"itemType":2,"comment":{"text":"\u003e S"}},{"itemType":2,"comment":{"text":"OOOOO"}},{"itemType":2,"comment":{"text":"OOOOO"}},{"itemType":2,"comment":{"text":"OAOOO"}},{"itemType":2,"comment":{"text":"OOOOO"}},{"itemType":2,"comment":{"text":"OOOOO"}},{"itemType":2,"comment":{"text":"OOOOO"}},{"itemType":2,"comment":{"text":"\u003e F 3 3 J"}},{"itemType":2,"comment":{"text":"\u003e V 2 3 4 W"}},{"itemType":2,"comment":{"text":"\u003e H 3 4 2 Z"}},{"itemType":2,"comment":{"text":"\u003e S"}},{"itemType":2,"comment":{"text":"JJJJJ"}},{"itemType":2,"comment":{"text":"JJZZJ"}},{"itemType":2,"comment":{"text":"JWJJJ"}},{"itemType":2,"comment":{"text":"JWJJJ"}},{"itemType":2,"comment":{"text":"JJJJJ"}},{"itemType":2,"comment":{"text":"JJJJJ"}},{"itemType":2,"comment":{"text":"```"}},{"itemType":2,"comment":{"text":"\n"}},{"itemType":2,"comment":{"text":"When implementing this program focus on quality and best practices. DO NOT RUSH! It's not a speed test. Make sure the program works with odd input and doesn't crash."}},{"itemType":2,"comment":{"text":"After implementing the required features, please implement a feature you think would make this program better/more useful and describe it in a README file."}},{"itemType":2,"comment":{"text":"\n"}},{"itemType":2,"comment":{"text":"Submission"}},{"itemType":2,"comment":{"text":"\n"}},{"itemType":2,"comment":{"text":"Please submit a fully completed answer within the time allowed. Please provide source code and full GIT repository. Please commit often and with good commit messages. That will allow us to see how you've approached the problem. Don't worry about changing things around often."}}],"isTableDriven":false,"fileName":"/Users/coocoder/desktop/carwow/specs/image.spec"},"scenarioCount":0,"scenarioFailedCount":0,"failed":false,"executionTime":0,"skipped":true,"scenarioSkippedCount":0}],"failed":false,"specsFailedCount":0,"executionTime":13,"successRate":50,"environment":"default","tags":"","projectName":"carwow","timestamp":"Nov 25, 2015 at 9:23pm","specsSkippedCount":1}};
 var itemTypesMap = {"1":"Step","2":"Comment","3":"Concept","4":"Scenario","5":"TableDrivenScenario","6":"Table","7":"Tags"};
 var parameterTypesMap = {"1":"Static","2":"Dynamic","3":"Special_String","4":"Special_Table","5":"Table"};
 var fragmentTypesMap = {"1":"Text","2":"Parameter"};